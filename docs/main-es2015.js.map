{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app-ui.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"scanner-shell\\\" [hidden]=\\\"!hasDevices\\\">\\n  <header>\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <select\\n        matNativeControl\\n        matInput\\n        (change)=\\\"onDeviceSelectChange($event.target.value)\\\"\\n      >\\n        <option value=\\\"\\\" [selected]=\\\"!currentDevice\\\">No Device Selected</option>\\n        <option\\n          *ngFor=\\\"let device of availableDevices\\\"\\n          [value]=\\\"device.deviceId\\\"\\n          [selected]=\\\"\\n            currentDevice && device.deviceId === currentDevice.deviceId\\n          \\\"\\n          >{{ device.label }}</option\\n        >\\n      </select>\\n    </mat-form-field>\\n  </header>\\n\\n  <zxing-scanner\\n    [torch]=\\\"torchEnabled\\\"\\n    [(device)]=\\\"currentDevice\\\"\\n    (scanSuccess)=\\\"onCodeResult($event)\\\"\\n    [formats]=\\\"formatsEnabled\\\"\\n    [tryHarder]=\\\"tryHarder\\\"\\n    (permissionResponse)=\\\"onHasPermission($event)\\\"\\n    (camerasFound)=\\\"onCamerasFound($event)\\\"\\n    (torchCompatible)=\\\"onTorchCompatible($event)\\\"\\n  ></zxing-scanner>\\n\\n  <section class=\\\"results\\\" *ngIf=\\\"qrResultString\\\">\\n    <div>\\n      <small>Result</small>\\n      <strong>{{ qrResultString }}</strong>\\n    </div>\\n    <button mat-icon-button (click)=\\\"clearResult()\\\">&times;</button>\\n  </section>\\n</div>\\n\"","import { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { ZXingScannerModule } from \"@zxing/ngx-scanner\";\r\n\r\n@NgModule({\r\n  exports: [\r\n    // Angular\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n\r\n    // Material\r\n    MatDialogModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n\r\n    ZXingScannerModule\r\n  ]\r\n})\r\nexport class AppUiModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { BarcodeFormat } from \"@zxing/library\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE\n  ];\n\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  qrResultString: string;\n\n  torchEnabled = false;\n  torchAvailable$ = new BehaviorSubject<boolean>(false);\n  tryHarder = false;\n\n  constructor(private readonly _dialog: MatDialog) {}\n\n  clearResult(): void {\n    this.qrResultString = null;\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n\n  onCodeResult(resultString: string) {\n    this.qrResultString = resultString;\n  }\n\n  onDeviceSelectChange(selected: string) {\n    const device = this.availableDevices.find(x => x.deviceId === selected);\n    this.currentDevice = device || null;\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false);\n  }\n\n  toggleTorch(): void {\n    this.torchEnabled = !this.torchEnabled;\n  }\n\n  toggleTryHarder(): void {\n    this.tryHarder = !this.tryHarder;\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppUiModule } from \"./app-ui.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppUiModule, BrowserAnimationsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import \"hammerjs\";\nimport { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}